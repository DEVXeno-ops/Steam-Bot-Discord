const { SlashCommandBuilder } = require('discord.js');

async function registerCommands(client) {
    const commands = [
        // üîß /setup donate & removedonate
        new SlashCommandBuilder()
            .setName('setup')
            .setDescription('‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)')
            .addSubcommand(sub =>
                sub.setName('donate')
                    .setDescription('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ')
                    .addStringOption(opt =>
                        opt.setName('recipient')
                            .setDescription('‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö')
                            .setRequired(true)
                    )
                    .addStringOption(opt =>
                        opt.setName('tradelink')
                            .setDescription('‡∏•‡∏¥‡∏á‡∏Å‡πå trade offer')
                            .setRequired(true)
                    )
            )
            .addSubcommand(sub =>
                sub.setName('removedonate')
                    .setDescription('‡∏•‡∏ö‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ')
                    .addStringOption(opt =>
                        opt.setName('recipient')
                            .setDescription('‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö')
                            .setRequired(true)
                    )
            ),

        // ‚ö†Ô∏è /blacklist
        new SlashCommandBuilder()
            .setName('blacklist')
            .setDescription('‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥')
            .addStringOption(opt =>
                opt.setName('steamid')
                    .setDescription('SteamID64 ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô')
                    .setRequired(true)
            )
            .addStringOption(opt =>
                opt.setName('reason')
                    .setDescription('‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô')
                    .setRequired(true)
            ),

        // üîç /check
        new SlashCommandBuilder()
            .setName('check')
            .setDescription('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥')
            .addStringOption(opt =>
                opt.setName('steamid')
                    .setDescription('SteamID64 ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô')
                    .setRequired(true)
            ),

        // üí∏ /donate
        new SlashCommandBuilder()
            .setName('donate')
            .setDescription('‡∏Ç‡∏≠‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ'),

        // üìú /history
        new SlashCommandBuilder()
            .setName('history')
            .setDescription('‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'),

        // üì¶ /donationhistory
        new SlashCommandBuilder()
            .setName('donationhistory')
            .setDescription('‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î')
    ];

    try {
        await client.application.commands.set(commands.map(cmd => cmd.toJSON()));
        console.log('‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß');
    } catch (error) {
        console.error('‚ùå ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:', error);
    }
}

module.exports = { registerCommands };
